generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  directUrl = env("DIRECT_URL")
  url       = env("DATABASE_URL")
}

model User {
  id         String     @id @db.Uuid
  username   String?
  email      String?    @unique
  tasks      Task[]
  categories Category[]
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime?  @updatedAt @map("updated_at")
  deletedAt  DateTime?  @map("deleted_at")

  @@map("user")
}

model Category {
  id   String @id @default(uuid()) @db.Uuid
  name String

  userId String @map("user_id") @db.Uuid
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  tasks Task[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@unique([userId, name]) // per user unique constraint
  @@map("category")
}

model Task {
  id     String @id @default(uuid())
  title  String
  status String
  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @db.Uuid

  @@map("task")
}
